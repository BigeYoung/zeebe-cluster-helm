kind: ConfigMap
metadata:
  name: {{ tpl .Values.global.zeebe . | quote }}
  labels: 
    app.kubernetes.io/name: {{ include "zeebe-cluster.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app: {{ tpl .Values.global.zeebe . | quote }}
apiVersion: v1
data:
  startup.sh: |
    #!/usr/bin/env bash
    set -eux -o pipefail

    export ZEEBE_BROKER_NETWORK_ADVERTISEDHOST=${ZEEBE_BROKER_NETWORK_ADVERTISEDHOST:-$(hostname -f)}
    export ZEEBE_BROKER_CLUSTER_NODEID=${ZEEBE_BROKER_CLUSTER_NODEID:-${K8S_POD_NAME##*-}}

    # As the number of replicas or the DNS is not obtainable from the downward API yet,
    # defined them here based on conventions
    export ZEEBE_BROKER_CLUSTER_CLUSTERSIZE=${ZEEBE_BROKER_CLUSTER_CLUSTERSIZE:-1}
    contactPointPrefix=${K8S_POD_NAME%-*}
    contactPoints=${ZEEBE_BROKER_INITIALCONTACTPOINTS:-""}
    if [[ -z "${contactPoints}" ]]; then
      for ((i=0; i<${ZEEBE_BROKER_CLUSTER_CLUSTERSIZE}; i++))
      do
        contactPoints="${contactPoints},${contactPointPrefix}-$i.$(hostname -d):26502"
      done

      export ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS="${contactPoints}"
    fi

    exec /usr/local/zeebe/bin/broker "$@"
  broker.cfg.yml: |
    zeebe:
      broker:
        threads:
          cpuThreadCount: {{ .Values.cpuThreadCount }}
          ioThreadCount: {{ .Values.ioThreadCount }}
        gateway:
          monitoring:
            enabled: {{ .Values.gatewayMetrics | default true }}
        {{- if .Values.elasticExporter.enabled }}
        exporters:
          elasticsearch:
            className: "io.zeebe.exporter.ElasticsearchExporter"
            args:
              url: "http://{{ .Values.global.elasticsearch.host }}:{{ .Values.global.elasticsearch.port }}"
              bulk:
                delay: 5
                size: 1000
              index:
                prefix: "zeebe-record"
        {{- end }}
